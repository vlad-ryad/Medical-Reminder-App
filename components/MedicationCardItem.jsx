// –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
import { View, Text, Image, StyleSheet } from 'react-native';
import React, { useEffect, useState } from 'react';
import Colors from '../constant/Colors'; // –¶–≤–µ—Ç–æ–≤—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
import Ionicons from '@expo/vector-icons/Ionicons'; // –ò–∫–æ–Ω–∫–∏

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç MedicationCardItem ‚Äî –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É –æ–¥–Ω–æ–≥–æ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞.
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–µ–∫–∞—Ä—Å—Ç–≤–µ –∏ –µ–≥–æ —Å—Ç–∞—Ç—É—Å –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å.
 */
export default function MedicationCardItem({ medicine, selectedDate = '' }) {
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏—ë–º–∞ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å
    const [statuses, setStatuses] = useState([]);

    // –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ –∏–ª–∏ –¥–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    useEffect(() => {
        CheckStatus();
    }, [medicine, selectedDate]);

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–∞—Ç–µ
    const CheckStatus = () => {
        if (Array.isArray(medicine?.action)) {
            const data = medicine.action.filter(item => item.date === selectedDate);
            setStatuses(data);
        } else {
            setStatuses([]);
        }
    };

    return (
        <View style={styles.container}>
            {/* –õ–µ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü —Å –∏–∫–æ–Ω–∫–∞–º–∏ —Å—Ç–∞—Ç—É—Å–æ–≤: –ø—Ä–∏–Ω—è—Ç –∏–ª–∏ –ø—Ä–æ–ø—É—â–µ–Ω */}
            <View style={styles.statusColumn}>
                {statuses.map((entry, index) => (
                    <Ionicons
                        key={index}
                        name={entry.status === 'Taken' ? 'checkmark-circle' : 'close-circle'}
                        size={20}
                        color={entry.status === 'Taken' ? Colors.GREEN : 'red'}
                        style={styles.statusIcon}
                    />
                ))}
            </View>

            {/* –ò–∫–æ–Ω–∫–∞ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ */}
            <View style={styles.imageContainer}>
                <Image
                    source={medicine?.type?.icon}
                    style={{ width: 60, height: 60 }}
                    resizeMode="contain"
                />
            </View>

            {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–µ–∫–∞—Ä—Å—Ç–≤–µ */}
            <View style={styles.contentContainer}>
                {/* –ù–∞–∑–≤–∞–Ω–∏–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ */}
                <Text style={styles.name} numberOfLines={2}>{medicine?.name}</Text>

                {/* –î–æ–∑–∏—Ä–æ–≤–∫–∞ –∏ —Ç–∏–ø –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ */}
                <Text style={styles.dose} numberOfLines={1}>{medicine?.dose} {medicine?.type?.name}</Text>

                {/* –í—Ä–µ–º—è –ø—Ä–∏—ë–º–∞ –∏–∑ whenToTake (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–£—Ç—Ä–æ–º", "–ü–µ—Ä–µ–¥ —Å–Ω–æ–º") */}
                {medicine.whenToTake?.length > 0 && (
                    <Text style={styles.details}>
                        ‚è∞ –ö–æ–≥–¥–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å: {medicine.whenToTake.join(', ')}
                    </Text>
                )}

                {/* –ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –≤—Ä–µ–º—è –ø—Ä–∏—ë–º–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –≤—Ä–µ–º–µ–Ω–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "08:00", "20:30") */}
                {medicine.times?.length > 0 && (
                    <Text style={styles.details}>
                        üïí –í—Ä–µ–º—è –ø—Ä–∏–µ–º–∞: {medicine.times.join(', ')}
                    </Text>
                )}

                {/* –ß–∞—Å—Ç–æ—Ç–∞ –ø—Ä–∏—ë–º–∞ (–µ–∂–µ–¥–Ω–µ–≤–Ω–æ, —á–µ—Ä–µ–∑ –¥–µ–Ω—å, –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏) */}
                {medicine.frequency && (
                    <Text style={styles.details}>
                        üîÅ –ü–æ–≤—Ç–æ—Ä: {
                            medicine.frequency === 'daily' ? '–ö–∞–∂–¥—ã–π –¥–µ–Ω—å' :
                                medicine.frequency === 'every2' ? '–ß–µ—Ä–µ–∑ –¥–µ–Ω—å' :
                                    `–ü–æ –¥–Ω—è–º: ${medicine.weekdays?.join(', ') || ''}`
                        }
                    </Text>
                )}
            </View>
        </View>
    );
}

// –°—Ç–∏–ª–∏ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
const styles = StyleSheet.create({
    container: {
        padding: 10,
        borderWidth: 1,
        borderColor: Colors.LIGHT_GRAY_BORDER,
        marginTop: 10,
        borderRadius: 15,
        flexDirection: 'row',
        alignItems: 'center',
    },

    statusColumn: {
        flexDirection: 'column',
        alignItems: 'center',
    },

    imageContainer: {
        padding: 2.5,
        backgroundColor: 'white',
        borderRadius: 15,
        marginRight: 15,
    },

    statusIcon: {
        marginVertical: 1,
    },

    contentContainer: {
        flex: 1,
    },

    name: {
        fontSize: 18,
        fontWeight: 'bold',
        flexShrink: 1,
        flexWrap: 'wrap',
    },

    when: {
        fontSize: 15,
        color: Colors.GRAY,
        flexWrap: 'wrap',
    },

    dose: {
        fontSize: 16,
        marginTop: 2,
        color: Colors.DARK_GRAY,
        flexWrap: 'wrap',
    },

    details: {
        fontSize: 15,
        marginTop: 4,
        color: Colors.DARK_GRAY,
        flexWrap: 'wrap',
    },
});